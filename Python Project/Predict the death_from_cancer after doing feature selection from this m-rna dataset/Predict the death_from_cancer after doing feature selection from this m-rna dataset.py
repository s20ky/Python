# -*- coding: utf-8 -*-
"""Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import pandas as pd
df = pd.read_csv("/content/METABRIC_RNA_Mutation - METABRIC_RNA_Mutation (1).csv")

df.head()

df.info()

df.describe(include='all')

# Check missing values
df.isnull().sum()

# Drop columns with excessive missing values
df = df.loc[:, df.isnull().mean() < 0.5]

# Filling missing values for numeric and categorical separately
for col in df.select_dtypes(include='number'):
    df[col].fillna(df[col].median(), inplace=True)

for col in df.select_dtypes(include='object'):
    df[col].fillna(df[col].mode()[0], inplace=True)

# Removing duplicates
df.drop_duplicates(inplace=True)

import matplotlib.pyplot as plt
import seaborn as sns

# Count of samples per class
sns.countplot(x='cancer_type', data=df)
plt.title("Class Distribution")
plt.show()

#Distribution of a key numeric column
sns.histplot(df['age_at_diagnosis'], kde=True)
plt.title("Age at Diagnosis Distribution")
plt.show()

#Correlation heatmap
plt.figure(figsize=(12, 10))
sns.heatmap(df.corr(numeric_only=True), annot=True, fmt=".2f")
plt.title("Correlation Heatmap")
plt.show()

# Boxplot of age by tumor stage
sns.boxplot(x='tumor_stage', y='age_at_diagnosis', data=df)
plt.title("Age by Tumor Stage")
plt.show()

# Violin plot for gene expression
sns.violinplot(x='cancer_type', y='3-gene_classifier_subtype', data=df)
plt.title("3-gene_classifier_subtype Expression by Class")
plt.show()

# Pairplot of selected numeric features
sns.pairplot(df[['age_at_diagnosis', 'tumor_size', 'lymph_nodes_examined_positive']])
plt.suptitle("Pairplot of Key Features", y=1.02)
plt.show()

# Pie chart of a categorical distribution
df['tumor_stage'].value_counts().plot.pie(autopct='%1.1f%%')
plt.title("Tumor Stage Distribution")
plt.ylabel("")
plt.show()

# Barplot of mutation count per gene
mutation_counts = (df.iloc[:, 2:] != 0).sum().sort_values(ascending=False).head(10)
mutation_counts.plot(kind='bar')
plt.title("Top 10 Mutated Genes")
plt.ylabel("Count")
plt.xticks(rotation=45)
plt.show()

# Heatmap of missing values
sns.heatmap(df.isnull(), cbar=False)
plt.title("Missing Values Heatmap")
plt.show()

"""#No missing values seen."""

# Distribution of tumor size
sns.histplot(df['tumor_size'], bins=20, kde=True)
plt.title("Tumor Size Distribution")
plt.show()

